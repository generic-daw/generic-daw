[workspace]
members = [
	"audio_graph",
	"clap_host",
	"generic_daw_core",
	"generic_daw_gui",
	"generic_daw_project",
	"generic_daw_utils",
	"generic_daw_widget",
]
resolver = "3"

[workspace.dependencies]
audio_graph = { path = "audio_graph" }
clap_host = { path = "clap_host" }
generic_daw_core = { path = "generic_daw_core" }
generic_daw_gui = { path = "generic_daw_gui" }
generic_daw_project = { path = "generic_daw_project" }
generic_daw_utils = { path = "generic_daw_utils" }
generic_daw_widget = { path = "generic_daw_widget" }

[workspace.package]
version = "0.0.0"
edition = "2024"
license = "GPL-3.0-only"

[workspace.lints.rust]
missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
rust_2018_idioms = "warn"
unused_crate_dependencies = "warn"
unused_qualifications = "warn"

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }
cast_possible_truncation = "allow"
cast_possible_wrap = "allow"
cast_precision_loss = "allow"
cast_sign_loss = "allow"
float_cmp = "allow"
too_many_lines = "allow"
too_many_arguments = "allow"
type_complexity = "allow"

missing_errors_doc = "allow"
missing_panics_doc = "allow"

nursery = { level = "warn", priority = -1 }
missing_const_for_fn = "allow"

allow_attributes = "warn"
empty_enum_variants_with_brackets = "warn"
empty_structs_with_brackets = "warn"
get_unwrap = "warn"
if_then_some_else_none = "warn"
lossy_float_literal = "warn"
pub_without_shorthand = "warn"
redundant_type_annotations = "warn"
ref_patterns = "warn"
renamed_function_params = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "warn"
semicolon_inside_block = "warn"
separated_literal_suffix = "warn"
str_to_string = "warn"
string_lit_chars_any = "warn"
try_err = "warn"
unused_trait_names = "warn"

dbg_macro = "warn"
print_stdout = "warn"
print_stderr = "warn"

multiple_unsafe_ops_per_block = "deny"
undocumented_unsafe_blocks = "deny"

[profile.dev]
opt-level = 1

[profile.release]
lto = true
codegen-units = 1
